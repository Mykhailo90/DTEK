<main>
		
	<div class="main_page" id="main_page" style="position: absolute; left: -100%;">
		
	</div>
	
	<div class="catalog" id="catalog" style="position: static; right: 0px;">
		<div class="course-hero-module">
			<div class="header_backgound_img"></div>
				<div class="page_name">
					<div class="frame" id="main_title_frame">
						
					<h1 id="main_title">Блог</h1></div>
			</div>
		</div>
		<div class="wiper" id="wiper" style="background-color: white;"> 
			<div class="bread_crumbs frame">
				<div class="frame" id="path">
					
				<div class="bredcrumb" id="bredcrumb"><div class="pathes" id="programs_catalog"><a href="/">Главная</a></div><div class="pathes" id="blog">
				<a href="/blog">Блог</a><div class="pathes" id="blog_id_4">Изучаем регрессию дальше: предскажем сколько книг человек читает за год, зная его скорость чтения в минуту</div></div></div>
			</div>
			<div class="blocks_list_frame">
				<div class="blocks_menu" id="blocks_menu"><div class="block_area" id="block_area" style="height: auto;"><div class="swipe_block" style="transform: translateX(0%); position: relative;"><div class="blog_frame"><div class="blog_frame_940"><h1>Изучаем регрессию дальше: предскажем сколько книг человек читает за год, зная его скорость чтения в минуту</h1><div class="blog_info"><div class="author"><div>Автор статьи:</div><div>Евгений Бондаренко</div></div><div class="category"><div>Раздел:</div><div>null</div></div><div class="date"><div>Дата:</div><div>20.09.2017</div></div></div><div class="img"><div><img src="//dtekacademy.com/img/blog/post_1.jpg" alt="график скорочтения"></div></div><div class="common_text_content"><p>В предыдущей статье «<a href="http://hr1.in.ua/regressiya-kak-nachat-predskazyivat/" target="_blank" rel="noopener"><u>Регрессия: Как начать предсказывать</u></a>» мы коснулись темы простой линейной регрессии. Сегодня мы продолжим погружаться в эту интересную тему.</p>  <h2>Задача</h2>  <p>Итак, задача на сегодня у нас следующая. Есть данные участников мастер-класса по скорочтению (126 наблюдений). Мы построим модель прогноза <em>Количества прочитанных книг</em> за год на основании <em>Скорости чтения</em> человека. Т.е. <em>Количество книг</em> это зависимая переменная, а <em>Скорость чтения</em> – это независимая переменная (предиктор).</p> <p>В предыдущей статье мы уже строили простую линейную регрессию.</p> <p>В этой статье мы задействуем следующие методы:</p> <ul> <li>Полиномиальная регрессия</li> <li>Decision Tree («Дерево решений»)</li> <li>Random Forest («Случайный лес»)</li> <li>SVR (метод опорных векторов)</li> <li>KNN (метод k-ближайших соседей)</li> </ul> <p>После того как мы построим все эти модели, мы их протестируем на тестовой выборке. И после этого посмотрим, какая модель лучше всего справилась с заданием. Т.е. выберем лучшую.</p>   <h2>Подготовка данных</h2> <p>У нас есть набор данных участников мастер-классов по скорочтению. База, на основании которой мы будем строить нашу модель.</p> <p>Загрузить данные в R можно следующей командой:</p> <p>dataset &lt;- read.csv(«SpeedReading_4_Groups.csv», sep = «;»)</p> <p>Посмотреть на первые шесть строк нашего датасета можно так:</p> <p>head(dataset)</p> <p><img class="size-full wp-image-3325 aligncenter" src="../img/blog/post_1/trainining_set.png" alt="" width="859" height="149" srcset="http://www.hr1.in.ua/wp-content/uploads/trainining_set.png 859w, http://www.hr1.in.ua/wp-content/uploads/trainining_set-300x52.png 300w, http://www.hr1.in.ua/wp-content/uploads/trainining_set-768x133.png 768w" sizes="(max-width: 859px) 100vw, 859px"></p> <p>Никакой особой подготовки или преобразований наши данные не требуют.</p> <p>Нам только нужно разделить наши данные на тренировочный и тестовый наборы данных. Т.е. на тренировочном датасете мы будем тренировать наши модели, а на тестовом – будем их тестировать.</p> <p>Разделить наши данные на два датасета можно следующим кодом:</p> <p>trindex = sample(1:nrow(dataset), nrow(dataset)*0.8)</p> <p>training_set = dataset [trindex, ]</p> <p>test_set = dataset [-trindex, ]</p> <p>В результате такой операции мы получим два датасета:</p> <p>training_set – тренировочные данные</p> <p>test_set – тестовые данные</p> <p>При этом данные будут распределены в пропорции 4/5. Т.е. 80% данных пойдет в тренировочные датасет, а 20% оставшихся в тестовый.</p>   <h2>Вспоминаем линейную регрессию</h2> <p>Давайте построим простую линейную регрессию с одной независимой переменной, как мы это делали в прошлой статье.</p> <p>У нас получится следующая модель:</p> <p><img class="size-full wp-image-3326 aligncenter" src="../img/blog/post_1/fit_lm.png" alt="" width="551" height="297" srcset="http://www.hr1.in.ua/wp-content/uploads/fit_lm.png 551w, http://www.hr1.in.ua/wp-content/uploads/fit_lm-300x162.png 300w" sizes="(max-width: 551px) 100vw, 551px"></p> <p>А также давайте визуализируем данную модель.</p> <p><img class="size-full wp-image-3327 aligncenter" src="../img/blog/post_1/plot_lm.png" alt="" width="638" height="426" srcset="http://www.hr1.in.ua/wp-content/uploads/plot_lm.png 638w, http://www.hr1.in.ua/wp-content/uploads/plot_lm-300x200.png 300w" sizes="(max-width: 638px) 100vw, 638px"></p> <p>Линейные модели мы можем использовать, когда выполняются определенные условия. Такие, как, например, линейная взаимосвязь и нормальное распределение наших переменных.</p> <p>Тест на нормальность распределения наших переменных:</p> <p><img class="size-full wp-image-3328 aligncenter" src="../img/blog/post_1/normal_test.png" alt="" width="362" height="208" srcset="http://www.hr1.in.ua/wp-content/uploads/normal_test.png 362w, http://www.hr1.in.ua/wp-content/uploads/normal_test-300x172.png 300w" sizes="(max-width: 362px) 100vw, 362px"></p> <p>А также гистограммы:</p> <p><img class="size-full wp-image-3329 alignleft" src="../img/blog/post_1/hist_books.png" alt="" width="480" height="337" srcset="http://www.hr1.in.ua/wp-content/uploads/hist_books.png 480w, http://www.hr1.in.ua/wp-content/uploads/hist_books-300x211.png 300w" sizes="(max-width: 480px) 100vw, 480px"> <img class="alignnone size-full wp-image-3330" src="../img/blog/post_1/hist_speed.png" alt="" width="480" height="337" srcset="http://www.hr1.in.ua/wp-content/uploads/hist_speed.png 480w, http://www.hr1.in.ua/wp-content/uploads/hist_speed-300x211.png 300w" sizes="(max-width: 480px) 100vw, 480px"></p> <p>Т.е. наша зависима переменная (<em>Количество прочитанных книг</em>) не прошла тест на нормальность. Кроме того, если посмотреть на график scatter plot, где отображена взаимосвязь наших двух переменных, то мы увидим, что связаны они не совсем линейно.</p>    <h2>Нелинейные модели</h2> <p>Теперь давайте попробуем решить нашу задачку при помощи нелинейных моделей.</p> <h3>Полиномиальная модель</h3> <p>Построить такую модель совсем несложно. Достаточно добавить несколько полиномов. Например, это можно сделать так:</p> <p>training_set$Level2 = training_set$Скорость.чтения^2</p> <p>training_set$Level3 = training_set$Скорость.чтения^3</p> <p>training_set$Level4 = training_set$Скорость.чтения^4</p> <p>poly_reg = lm(Сколько.книг~Скорость.чтения+Level2+Level3+Level4, data = training_set)</p> <p>summary(poly_reg)</p> <p>В результате выполнения данных команд мы получим следующую модель:</p> <p><img class="size-full wp-image-3331 aligncenter" src="../img/blog/post_1/fit_poly.png" alt="" width="521" height="328" srcset="http://www.hr1.in.ua/wp-content/uploads/fit_poly.png 521w, http://www.hr1.in.ua/wp-content/uploads/fit_poly-300x189.png 300w" sizes="(max-width: 521px) 100vw, 521px"></p> <p>Интерпретация такой модели ничем не отличается от линейной модели. Здесь мы можем увидеть все предикторы, а также посмотреть чему равняется R<sup>2</sup> нашей модели.</p> <p>Давайте визуализируем и данную модель:</p> <p><img class="size-full wp-image-3332 aligncenter" src="../img/blog/post_1/plot_poly.png" alt="" width="638" height="426" srcset="http://www.hr1.in.ua/wp-content/uploads/plot_poly.png 638w, http://www.hr1.in.ua/wp-content/uploads/plot_poly-300x200.png 300w" sizes="(max-width: 638px) 100vw, 638px"></p> <p>Теперь давайте построим и другие типы моделей.</p> <ul> <li>Decision Tree («Дерево решений»)</li> <li>Random Forest («Случайный лес»)</li> <li>SVR (Метод опорных векторов)</li> <li>KNN (Метод k-ближайшего соседа)</li> </ul> <p>У данных методов есть настраиваемые параметры. В данной статье мы не будем детально вдаваться во все подробности такой настройки, а попробуем использовать некие “стандартные” величины.</p>   <h3>Decision Tree («Дерево решений»)</h3> <p>Для построения модели Decision Tree достаточно выполнить следующий код:</p> <p>dTree &lt;-&nbsp; rpart(formula = Сколько.книг ~ Скорость.чтения,</p> <p>data = training_set,</p> <p>control = rpart.control(minsplit = 3))</p> <p>И давайте также визуализируем полученный результат:</p> <p><img class="size-full wp-image-3333 aligncenter" src="../img/blog/post_1/plot_DT.png" alt="" width="638" height="426" srcset="http://www.hr1.in.ua/wp-content/uploads/plot_DT.png 638w, http://www.hr1.in.ua/wp-content/uploads/plot_DT-300x200.png 300w" sizes="(max-width: 638px) 100vw, 638px"></p> <p>Мы видим, что данный метод совсем по-другому визуально пытается описать наши данные в отличие от простой линейной регрессии.</p>   <h3>Random Forest («Случайный лес»)</h3> <p>Двигаемся дальше. Теперь метод Random Forest. Для построения регрессионной модели данным методом необходимо выполнить следующий код:</p> <p>rndForest = randomForest(x = training_set[5],</p> <p>y = training_set$Сколько.книг,</p> <p>ntree = 5)</p> <p>И давайте посмотрим на визуализацию нашей новой модели:</p> <p><img class="size-full wp-image-3334 aligncenter" src="../img/blog/post_1/plot_RF.png" alt="" width="638" height="426" srcset="http://www.hr1.in.ua/wp-content/uploads/plot_RF.png 638w, http://www.hr1.in.ua/wp-content/uploads/plot_RF-300x200.png 300w" sizes="(max-width: 638px) 100vw, 638px"></p> <p>Из рисунка видно, что данный метод еще более «изощрённо» пытается описать наши данные.</p>   <h3>SVR (Метод опорных векторов)</h3> <p>Переходим к следующему методу – SVR (Метод опорных векторов). Для построения регрессионной модели, необходимо выполнить следующую строку кода:</p> <p>fitSVM = svm(formula = Сколько.книг ~ Скорость.чтения,</p> <p>data = training_set,</p> <p>type = ‘eps-regression’,</p> <p>kernel = ‘radial’)</p> <p>И также давайте посмотрим на графическое отображение нашей новой модели:</p> <p><img class="size-full wp-image-3335 aligncenter" src="../img/blog/post_1/plot_SVR.png" alt="" width="638" height="426" srcset="http://www.hr1.in.ua/wp-content/uploads/plot_SVR.png 638w, http://www.hr1.in.ua/wp-content/uploads/plot_SVR-300x200.png 300w" sizes="(max-width: 638px) 100vw, 638px"></p> <p>Рисунок показывает нам, что данный метод строит более плавную линию для описания наших данных.</p> <p><strong><em>KNN</em></strong><strong><em> (Метод </em></strong><strong><em>k</em></strong><strong><em>-ближайшего соседа)</em></strong></p> <p>И последний метод k-ближайшего соседа. Для построения регрессионной модели при помощи данного метода, нам необходимо выполнить следующий код:</p> <p>fitKNN &lt;- knn.reg(training_set[5], test_set[5], training_set[,4], k = 5)</p> <p>И визуализируем нашу модель на графике:</p> <p><img class="size-full wp-image-3336 aligncenter" src="../img/blog/post_1/plot_KNN-1.png" alt="" width="638" height="426" srcset="http://www.hr1.in.ua/wp-content/uploads/plot_KNN-1.png 638w, http://www.hr1.in.ua/wp-content/uploads/plot_KNN-1-300x200.png 300w" sizes="(max-width: 638px) 100vw, 638px"></p> <p>Из рисунка мы видим, что метод KNN чем-то похож на визуализацию Random Forest. Такая же ломанная кривая линия.</p>    <h2>Тестируем и выбираем лучшую модель</h2> <p>Теперь давайте протестируем все наши 6 моделей на тестовом наборе данных. Если помните в самом начале мы разделили наш датасет на две части: тренировочный датасет и тестовый датасет. До этого момента мы использовали тренировочный датасет. А теперь мы воспользуемся тестовыми данными.</p> <p>Т.е. ответим на вопрос, а какая модель лучше других может более точно предсказывать значения <em>Количества прочитанных книг</em> на новых данных.</p> <p>В этом нам помогут три показателя:</p> <p><em>MAE (Mean Absolute Error)</em> – Средняя абсолютная ошибка между предсказанной и реальной величиной. Чем меньше ошибка, тем лучше.</p> <p><em>RMSE (Root Mean Squared Error)</em> – Квадратный корень из среднеквадратичной ошибки между предсказанной и реальной величиной. От МАЕ отличается тем, что «штрафует» большие ошибки сильнее. Чем меньше, тем лучше.</p> <p><em>Rsq</em> <em>(коэффициент детерминации)</em> – это доля дисперсии зависимой переменной, объяснённая нашей независимой переменной или переменными. Чем он больше, тем лучше.</p> <p>После несложных вычислений и применения наших 6-ти моделей к тестовым данным, мы получим вот такую таблицу:</p> <p><img class="size-full wp-image-3337 aligncenter" src="../img/blog/post_1/Models_test_1.png" alt="" width="341" height="119" srcset="http://www.hr1.in.ua/wp-content/uploads/Models_test_1.png 341w, http://www.hr1.in.ua/wp-content/uploads/Models_test_1-300x105.png 300w" sizes="(max-width: 341px) 100vw, 341px"></p> <p>Давайте выберем трех лидеров по каждому показателю:</p> <p><em>МАЕ: линейная, </em><em>KNN</em><em> и полиномиальная</em></p> <p><em>RMSE</em><em>: полиномиальная, </em><em>Decision</em> <em>Tree</em> <em>и </em><em>KNN</em></p> <p><em>Rsq: </em><em>полиномиальная</em><em>, Decision Tree </em><em>и</em><em> KNN</em></p> <p>По всем трем показателям у нас лидируют две модели: <em>полиномиальная </em>и <em>KNN</em><em>.</em></p> <p>Ранее я говорил о том, что метод <em>KNN</em><em>-регрессии </em>имеет настраиваемый параметр. Этот параметр (k) задается в формуле. Когда мы строили модель первый раз, мы задали стандартное значение 5. Но давайте теперь попробуем подобрать оптимальное значение (k), при котором наша ошибка <em>RMSE </em>будет минимальной.</p> <p>Запустив совсем несложный цикл, мы получим следующий результат:</p> <p><img class="size-full wp-image-3338 aligncenter" src="../img/blog/post_1/KNN_RMSE.png" alt="" width="444" height="391" srcset="http://www.hr1.in.ua/wp-content/uploads/KNN_RMSE.png 444w, http://www.hr1.in.ua/wp-content/uploads/KNN_RMSE-300x264.png 300w" sizes="(max-width: 444px) 100vw, 444px"></p> <p>Т.е. наша ошибка <em>RMSE</em> будет минимальной при k=3. Давайте еще раз построим модель KNN с учетом нового значения k=3.</p> <p>fitKNN &lt;- knn.reg(training_set[5], test_set[5], training_set[,4], k = 3)</p> <p>И теперь еще раз рассчитаем все наши параметры для выбора лучшей модели:</p> <p><img class="size-full wp-image-3339 aligncenter" src="../img/blog/post_1/Models_test_2.png" alt="" width="343" height="130" srcset="http://www.hr1.in.ua/wp-content/uploads/Models_test_2.png 343w, http://www.hr1.in.ua/wp-content/uploads/Models_test_2-300x114.png 300w" sizes="(max-width: 343px) 100vw, 343px"></p> <p>Мы видим, что настройка параметра k дала свои результаты. Теперь у нас у метода KNN самая минимальная ошибка <em>RMSE</em> и самый большой <em>Rsq</em><em>.</em></p> <p>Мы могли бы тюнинговать и другие методы, но это уже материал для новой статьи.</p> <p>Теперь визуализируем все наши модели (линии) и на эти же графики точками нанесем данные из тестового датасета. Так мы сможем понаблюдать воочию, насколько точно наши модели описывали новые данные.</p> <p>Ниже представлен именно такой график:</p> <p><img class="size-full wp-image-3340 aligncenter" src="../img/blog/post_1/Plots_test-data.png" alt="" width="1020" height="964" srcset="http://www.hr1.in.ua/wp-content/uploads/Plots_test-data.png 1020w, http://www.hr1.in.ua/wp-content/uploads/Plots_test-data-300x284.png 300w, http://www.hr1.in.ua/wp-content/uploads/Plots_test-data-768x726.png 768w" sizes="(max-width: 1020px) 100vw, 1020px"></p>   <h2>Выводы</h2> <p>В этой статье мы познакомились с несколькими нелинейными методами регрессии и решили поставленную в начале задачу. А именно:</p> <ul> <li>Построили модель регрессии различными методами</li> <li>Рассчитали критерии точности моделей для выбора наилучшей</li> <li>Настроили k-параметр в KNN методе</li> <li>Выбрали наилучшую модель и визуализировали итоговый результат</li> </ul> <p>В завершении еще раз хотел бы обратить внимание коллег, кто желает начать заниматься HR-аналитикой, на следующую особенность. В аналитике хорошо работает метод аналогий. Т.е. аналитические инструменты из маркетинга, производства и других &nbsp;сфер, можно применять в HR-аналитике. Да и в рамках одной сферы можно успешно использовать аналогичные методы для анализа. Например, на месте количества прочитанных книг, из этой статьи, может быть результативность сотрудников, может быть эффективность кандидата при приеме на работу, заработная плата и т.д. Т.е. можно много других показателей предсказывать при помощи подобного подхода.</p> <p>P.S.: Для всех кто хочет начать заниматься настоящей HR-аналитикой, Академия ДТЭК запускает курс по HR-аналитике.&nbsp;</p> <p>Курс максимально практичный. Расскажем и поделимся всем, что знаем и что сами применяем в работе. Более детально о программе можно узнать по ссылке:</p> <p>https://dtekacademy.com/events/announces/hr-analitica-3009/</p></div><div style="clear: both;"></div></div></div></div></div></div>
				<div class="bottom_retern" id="bottom_retern">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M491.318 235.318H20.682C9.26 235.318 0 244.578 0 256c0 11.423 9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.26 20.682-20.682 0-11.422-9.26-20.682-20.682-20.682z"></path><path d="M49.932 256L211.795 94.136c8.077-8.077 8.077-21.172 0-29.25-8.077-8.075-21.172-8.075-29.25 0L6.06 241.377c-8.077 8.076-8.077 21.17 0 29.248l176.488 176.488c4.038 4.04 9.332 6.058 14.625 6.058 5.294 0 10.588-2.02 14.626-6.058 8.077-8.077 8.077-21.172 0-29.25L49.932 256z"></path></svg>
				</div>
			</div>
		 </div>
	 </div>
	 <div class="pages_area" id="pages_area">
		<div id="page_area"></div>
	</div> 
 </main>