1. В таблице mod_programs в поле path_to_program id_84
   исправить на module_programs поля page_name и path_to_program
   а также зависимые значения.

2. В таблице mod_programs добавить поле check_on с дефолтным значением 1
   для управления отображением сущностей объектов на странице.

3. Cоздать таблицу banner_table с полями id_banner, img_path, title, short_info,
   button_content, id_page, route_path, check_on.
   Для управления банерами для всех страниц сайта.

4. Cоздать таблицу directions с полями id_direction, title, short_info,
   img_path, route_path, check_on.
   id_direction связать таблицы directions связать ключом с mod_programs полем id
   Для управления направлениями (отображения категорий, их сортировки).

5. Добавить строки в таблицу mod_programs под id 185-188 со страницами для
   отображения направлений. (Уточнить наименования направлений).

6. Добавить поле direction в mod_programs для распределения действующих программ по категориям,
   дефолтное значение NULL.

7. Добавить хранимую процедуру для получения данных в навигационное меню. Имя хранимой процедуры "navMenu"

    DELIMITER //

    CREATE PROCEDURE `navMenu` ()

    BEGIN
        SELECT * FROM mod_programs WHERE parent_page = '9' AND check_on = '1';
    END//

8. Добавить хранимую процедуру для получения данных для отображения баннеров. Имя хранимой процедуры "banners"

    DELIMITER //

    CREATE PROCEDURE `banners` ()

    BEGIN
	    SELECT * FROM `banner_table` WHERE id_page ='9' AND check_on = '1';
    END//

9. Добавить хранимую процедуру для получения данных для раздела "Направления". Имя хранимой процедуры "directions"

    DELIMITER //

    BEGIN
	    SELECT * FROM directions;
    END//


10. Добавить хранимую процедуру для получения данных для Календаря событий. Имя хранимой процедуры "calendar"

    DELIMITER //

    CREATE PROCEDURE `calendar` ()

    BEGIN
	    SELECT title, start_date, place, short_info FROM `events`;
    END//

11. Добавить хранимую процедуру для получения данных для раздела "Отзывы". Имя хранимой процедуры "feedback"

    DELIMITER //

    CREATE PROCEDURE feedback ()

    BEGIN
	    SELECT UF.id, UF.msg, UF.img_path, UA.user_name, UA.user_surname,
            UA.user_company FROM users_feedback UF JOIN users_all UA WHERE UF.user_id=UA.id AND UF.check_on = '1';
    END//

12. Добавить хранимую процедуру для получения данных для раздела "Популярные програмы". Имя хранимой процедуры "popular_programs"

    DELIMITER //

    CREATE PROCEDURE `popular_programs` ()

    BEGIN
	    SELECT * FROM `mod_programs` WHERE check_on=1 AND (parent_page='85' OR parent_page='84' OR parent_page='81');
    END//

13. Добавить хранимую процедуру для получения списокf возможных адресов. Имя хранимой процедуры "path_to_program"

    DELIMITER //

    CREATE PROCEDURE path_to_program ()

    BEGIN
	    SELECT path_to_program FROM mod_programs;
    END//

14. Добавить хранимую процедуру для получения списка всех программ. Имя хранимой процедуры "programs"

        DELIMITER //

        CREATE PROCEDURE programs ()

        BEGIN
        IF arg = 'list' THEN
        SELECT * FROM mod_programs WHERE parent_page IN(84, 85, 86, 87 , 88);
        ELSEIF arg = 'module_programs' THEN SELECT * FROM mod_programs WHERE parent_page = 84;
        ELSEIF arg = 'trenings' THEN SELECT * FROM mod_programs WHERE parent_page = 85;
        ELSEIF arg = 'team_buildings' THEN SELECT * FROM mod_programs WHERE parent_page = 86;
        ELSEIF arg = 'unforma_methods' THEN SELECT * FROM mod_programs WHERE parent_page = 87;
        ELSEIF arg = 'energy_management' THEN SELECT * FROM mod_programs WHERE parent_page = 88;
        END IF;

        END

15. Создать таблицу type_event с полями: id_type, type_name. Для хранения типов классификации мероприятий.
16. Создать таблицу types с полями из внешних ключей id_type, id_event. Первое поле ссылается на id_type
    таблицы type_event, второе на поле id таблицы mod_programs. Обязательно внести недостающие событие в
    таблицу мod_programs.

17. Создать таблицу subject_type с полями: id_subject, subject_name. Для хранения типов классификации мероприятий.
18. Создать таблицу subjects с полями из внешних ключей id_subject, id_event. Первое поле ссылается на id_subject
    таблицы subject_types, второе на поле id таблицы mod_programs. Обязательно внести недостающие событие в
    таблицу мod_programs и subjects для выборки.

19 Создать таблицу trener_event с полями id_trener, id_event согласовать с таблицами treners и mod_programs.
    Заполнить таблицу значениями для тестирования вывода
